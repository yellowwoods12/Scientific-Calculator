{"ast":null,"code":"var logMiddleware = function logMiddleware(_ref) {\n  var getState = _ref.getState,\n      dispatch = _ref.dispatch;\n  return function (next) {\n    return function (action) {\n      console.log(\"Action: \".concat(action.type, \", \").concat(action.event));\n      next(action);\n    };\n  };\n};\n\nexport default logMiddleware;","map":{"version":3,"sources":["/home/sadaif/Documents/React-App/redux-app/scientific/src/middleware/log.js"],"names":["logMiddleware","getState","dispatch","next","action","console","log","type","event"],"mappings":"AAAA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,QAAb,QAAaA,QAAb;AAAA,SAA4B,UAACC,IAAD;AAAA,WAAU,UAACC,MAAD,EAAY;AACpEC,MAAAA,OAAO,CAACC,GAAR,mBAAuBF,MAAM,CAACG,IAA9B,eAAuCH,MAAM,CAACI,KAA9C;AACAL,MAAAA,IAAI,CAACC,MAAD,CAAJ;AACH,KAHiD;AAAA,GAA5B;AAAA,CAAtB;;AAIA,eAAeJ,aAAf","sourcesContent":["const logMiddleware = ({ getState, dispatch }) => (next) => (action) => {\n    console.log(`Action: ${action.type}, ${action.event}`);\n    next(action);\n};\nexport default logMiddleware;"]},"metadata":{},"sourceType":"module"}