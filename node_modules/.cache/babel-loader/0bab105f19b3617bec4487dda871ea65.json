{"ast":null,"code":"export default function evaluateSolution(number1, operation, number2) {\n  var num1 = parseInt(number1);\n  var num2 = parseInt(number2);\n  var num3 = 100;\n\n  switch (operation) {\n    case '+':\n      return num1 + num2;\n\n    case '-':\n      return (num1 - num2).toString();\n\n    case 'x':\n      return (num1 * num2).toString();\n\n    case '÷':\n      return (num1 / num2).toString();\n\n    case '%':\n      return (num1 / num3).toString();\n\n    case '√':\n      return Math.sqrt(num1).toString();\n\n    case 'sin':\n      return Math.sin(num1).toString();\n\n    case 'tan':\n      return Math.tan(num1).toString();\n\n    case 'cos':\n      return Math.cos(num1).toString();\n\n    case 'Exp':\n      return Math.exp(num1).toString();\n\n    case 'Log':\n      return Math.log(num1).toString();\n\n    default:\n      return (num1 + num2).toString();\n  }\n}","map":{"version":3,"sources":["/home/sadaif/Documents/React-App/redux-app/scientific/src/reducers/evaluateSolution.js"],"names":["evaluateSolution","number1","operation","number2","num1","parseInt","num2","num3","toString","Math","sqrt","sin","tan","cos","exp","log"],"mappings":"AAAA,eAAe,SAASA,gBAAT,CAA0BC,OAA1B,EAAmCC,SAAnC,EAA8CC,OAA9C,EAAwD;AACnE,MAAIC,IAAI,GAAGC,QAAQ,CAACJ,OAAD,CAAnB;AACA,MAAIK,IAAI,GAAGD,QAAQ,CAACF,OAAD,CAAnB;AACA,MAAII,IAAI,GAAG,GAAX;;AACC,UAAOL,SAAP;AACG,SAAK,GAAL;AACI,aAAQE,IAAI,GAAGE,IAAf;;AACJ,SAAK,GAAL;AACI,aAAO,CAACF,IAAI,GAAGE,IAAR,EAAcE,QAAd,EAAP;;AACJ,SAAK,GAAL;AACI,aAAO,CAACJ,IAAI,GAAGE,IAAR,EAAcE,QAAd,EAAP;;AACJ,SAAK,GAAL;AACI,aAAO,CAACJ,IAAI,GAAGE,IAAR,EAAcE,QAAd,EAAP;;AACJ,SAAK,GAAL;AACI,aAAO,CAACJ,IAAI,GAAGG,IAAR,EAAcC,QAAd,EAAP;;AACJ,SAAK,GAAL;AACI,aAAQC,IAAI,CAACC,IAAL,CAAUN,IAAV,CAAD,CAAkBI,QAAlB,EAAP;;AACJ,SAAK,KAAL;AACI,aAAQC,IAAI,CAACE,GAAL,CAASP,IAAT,CAAD,CAAiBI,QAAjB,EAAP;;AACJ,SAAK,KAAL;AACI,aAAQC,IAAI,CAACG,GAAL,CAASR,IAAT,CAAD,CAAiBI,QAAjB,EAAP;;AACJ,SAAK,KAAL;AACI,aAAQC,IAAI,CAACI,GAAL,CAAST,IAAT,CAAD,CAAiBI,QAAjB,EAAP;;AACJ,SAAK,KAAL;AACI,aAAQC,IAAI,CAACK,GAAL,CAASV,IAAT,CAAD,CAAiBI,QAAjB,EAAP;;AACJ,SAAK,KAAL;AACI,aAAQC,IAAI,CAACM,GAAL,CAASX,IAAT,CAAD,CAAiBI,QAAjB,EAAP;;AAEJ;AACI,aAAO,CAACJ,IAAI,GAAGE,IAAR,EAAcE,QAAd,EAAP;AAzBP;AA2BJ","sourcesContent":["export default function evaluateSolution(number1, operation, number2  ){\n    let num1 = parseInt(number1);\n    let num2 = parseInt(number2);\n    let num3 = 100;\n     switch(operation){\n        case '+':\n            return (num1 + num2) ;\n        case '-':\n            return (num1 - num2).toString();\n        case 'x':\n            return (num1 * num2).toString();\n        case '÷':\n            return (num1 / num2).toString();\n        case '%':\n            return (num1 / num3).toString();    \n        case '√':\n            return (Math.sqrt(num1)).toString();\n        case 'sin':\n            return (Math.sin(num1)).toString();\n        case 'tan':\n            return (Math.tan(num1)).toString();\n        case 'cos':\n            return (Math.cos(num1)).toString();\n        case 'Exp':\n            return (Math.exp(num1)).toString();\n        case 'Log':\n            return (Math.log(num1)).toString();\n        \n        default:\n            return (num1 + num2).toString();\n    }\n}"]},"metadata":{},"sourceType":"module"}